{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation:\n\n\nCan't reach database server at `host.docker.internal:5432`\n\nPlease make sure your database server is running at `host.docker.internal:5432`.","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation:\n\n\nCan't reach database server at `host.docker.internal:5432`\n\nPlease make sure your database server is running at `host.docker.internal:5432`.\n    at zn.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/app/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/app/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async getPlaces (file:///app/src/controllers/placeController.js:10:20)","timestamp":"2025-05-02T17:13:35.160Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation:\n\n\nCan't reach database server at `travel_app_db:5432`\n\nPlease make sure your database server is running at `travel_app_db:5432`.","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation:\n\n\nCan't reach database server at `travel_app_db:5432`\n\nPlease make sure your database server is running at `travel_app_db:5432`.\n    at zn.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/app/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/app/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async getLocations (file:///app/src/controllers/locationController.js:7:23)","timestamp":"2025-05-02T17:33:43.198Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation:\n\n\nCan't reach database server at `travel_app_db:5432`\n\nPlease make sure your database server is running at `travel_app_db:5432`.","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation:\n\n\nCan't reach database server at `travel_app_db:5432`\n\nPlease make sure your database server is running at `travel_app_db:5432`.\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async getLocations (file:///Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:7:23)","timestamp":"2025-05-04T01:10:36.568Z"}
{"level":"error","message":"Authentication error: jwt malformed","name":"JsonWebTokenError","stack":"JsonWebTokenError: jwt malformed\n    at Object.<anonymous>.module.exports [as verify] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/jsonwebtoken/verify.js:70:17)\n    at verify (/Users/realwat/Documents/Projects/TravelAppAPI/src/middleware/auth.js:11:25)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:328:13)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:328:13)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:328:13)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:280:10)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-rate-limit/dist/index.cjs:822:7\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-rate-limit/dist/index.cjs:704:5","timestamp":"2025-05-04T01:41:05.623Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:49.244Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:49.262Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:49.284Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:49.311Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:53.435Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:53.450Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:53.471Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:53.503Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:01.291Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:01.311Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:01.336Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:01.373Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:08.160Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:08.183Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:08.215Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:08.253Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:17.796Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:17.817Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:17.847Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:17.882Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:12.496Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:12.528Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:12.560Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:12.594Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:30.901Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:30.919Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:30.954Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:30.994Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:02:59.428Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:02:59.446Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:02:59.470Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:02:59.496Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:02.062Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:02.078Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:02.101Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:02.124Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:29.187Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:29.213Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:29.252Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:29.291Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:39.361Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:39.374Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:39.401Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:39.432Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:52.793Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:52.816Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:52.850Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:52.886Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:04:44.654Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:04:44.677Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:04:44.708Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:04:44.741Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.631Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.647Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.662Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.680Z"}
{"level":"error","message":"DELETE /api/places/f2da43db-0c52-4c6b-9b6a-b703410110e2 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.725Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.497Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.513Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.529Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.546Z"}
{"level":"error","message":"DELETE /api/places/6ee15dd1-4135-4834-b472-c53b571a3de3 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.608Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:54.961Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:54.995Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:55.008Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:55.027Z"}
{"level":"error","message":"DELETE /api/places/ee4ee659-4992-47f7-8a7a-1d5bea455c91 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:55.068Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:01.903Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:02.706Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:03.560Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:04.370Z"}
{"level":"error","message":"DELETE /api/admin/places/ceb74d8f-f73b-44ff-b687-ff9fc0f98295 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:08.385Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:17.431Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:18.274Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:19.098Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:19.924Z"}
{"level":"error","message":"DELETE /api/admin/places/38bded6f-113c-4e6a-a4ee-162cc217550e - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:23.990Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:29.930Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:30.775Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:31.580Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:32.407Z"}
{"level":"error","message":"DELETE /api/admin/places/302177a7-0896-49c2-86a7-dac8095cb628 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:36.556Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:43.479Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:44.305Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:45.108Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:45.893Z"}
{"level":"error","message":"DELETE /api/places/2cc2dda8-c3d3-4883-b92a-b2b9cfa8eec4 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:49.873Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:57.193Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:58.022Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:58.842Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:59.671Z"}
{"level":"error","message":"DELETE /api/places/0c1ce016-e1a3-4cf5-b518-6fba8c04143a - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:12:03.689Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:00.672Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:01.477Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:02.323Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:03.139Z"}
{"level":"error","message":"DELETE /api/places/c1478fdc-2372-4ab1-a794-f9afe2e13e18 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:07.135Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:32.958Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:33.822Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:34.628Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:35.454Z"}
{"level":"error","message":"DELETE /api/admin/places/b6f224c1-4e37-4e48-98bc-5c2649846b17 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:39.427Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:48.119Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:48.949Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:49.753Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:50.565Z"}
{"level":"error","message":"DELETE /api/admin/places/3e730204-1e0e-49b9-b0cd-28aa23009a9e - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:54.589Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:42.954Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:43.747Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:44.550Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:45.378Z"}
{"level":"error","message":"DELETE /api/admin/places/6b4d0872-21ea-45ff-b167-6102a6a203a5 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:49.407Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:00.550Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:01.391Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:02.201Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:02.994Z"}
{"level":"error","message":"DELETE /api/admin/places/886b05f6-e035-4ae4-a1a0-475e02fbeedb - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:06.913Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:14.162Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:14.971Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:15.768Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:16.568Z"}
{"level":"error","message":"DELETE /api/admin/places/61b0b0ee-1dc8-4bfb-907f-838449081049 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:20.826Z"}
{"level":"error","message":"PUT /api/admin/locations/53b81f2f-2cd7-4f3d-8d37-7b58cf30ca57 - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at errors (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:11)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-05-07T06:43:25.123Z"}
{"level":"error","message":"PUT /api/admin/locations/30c2bce8-4bc6-4442-9f8f-b95aed763d45 - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at errors (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:11)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-05-07T06:44:19.259Z"}
{"level":"error","message":"GET /api/trips/bb413d43-a00e-4216-91bd-7873ff8b187e - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n         +   id: String\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id` is missing.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n         +   id: String\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id` is missing.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:44:24.551Z"}
{"level":"error","message":"PUT /api/admin/locations/c72e4e09-129d-4980-83c6-14d73ae958ac - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at errors (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:11)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-05-07T06:44:44.140Z"}
{"level":"error","message":"GET /api/trips/f631e10a-6104-47e3-a682-52612f87fab9 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n         +   id: String\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id` is missing.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n         +   id: String\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id` is missing.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:44:46.665Z"}
{"level":"error","message":"PUT /api/admin/locations/031c23d9-06b1-463e-94f7-d71d4e0ff207 - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at errors (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:11)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-05-07T06:45:02.733Z"}
{"level":"error","message":"GET /api/trips/612eaa71-adfe-42f4-91e8-6607ff752481 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 612\n                 ~~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 612\n                 ~~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:45:05.390Z"}
{"level":"error","message":"PUT /api/admin/locations/64c61a6e-882f-4803-b683-975a9459a633 - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at errors (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:11)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-05-07T06:45:48.878Z"}
{"level":"error","message":"GET /api/trips/2c91f266-8cf6-4c5a-9858-dc03f1e2e3f1 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 2\n                 ~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 2\n                 ~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:45:52.435Z"}
{"level":"error","message":"GET /api/trips/51720ad2-c7fe-4a12-8b18-fd0865dd7004 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 51720\n                 ~~~~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 51720\n                 ~~~~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:46:36.427Z"}
{"level":"error","message":"PUT /api/admin/locations/fb7cb89e-0d1b-44f3-8c01-1d2c7999a52b - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at errors (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:11)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-05-07T06:46:43.145Z"}
{"level":"error","message":"GET /api/trips/3bed41a5-bcec-4240-b63f-23ea2df95283 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 3\n                 ~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 3\n                 ~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:47:07.754Z"}
{"level":"error","message":"PUT /api/admin/locations/d5467ef8-0c79-4ade-82b5-96d407437dd7 - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at errors (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:11)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-05-07T06:47:13.900Z"}
{"level":"error","message":"GET /api/trips/9556d9d8-40ef-4402-a59e-055938e6ecd0 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 9556\n                 ~~~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 9556\n                 ~~~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:47:58.965Z"}
{"level":"error","message":"PUT /api/admin/locations/a81126f1-5fac-4f0c-b701-0545b0555732 - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at errors (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:11)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-05-07T06:48:05.466Z"}
{"level":"error","message":"GET /api/trips/82425bae-7ab1-4849-a676-7e000f949fe4 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 82425\n                 ~~~~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 82425\n                 ~~~~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:48:31.908Z"}
{"level":"error","message":"PUT /api/admin/locations/0d9bb558-2316-480d-af32-1fc89635577a - validationResult is not defined","stack":"ReferenceError: validationResult is not defined\n    at validationResult (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:76:20)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at _next (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1)\n    at new Promise (<anonymous>)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:2:1\n    at apply (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:74:28)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-05-07T06:48:40.061Z"}
{"level":"error","message":"GET /api/trips/66c892a6-71f9-4db3-96bf-99528d5ae7d5 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 66\n                 ~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.","stack":"PrismaClientValidationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:22:36\n\n  19 export const getTrip = async (req, res, next) => {\n  20   try {\n  21     const { id } = req.params;\n→ 22     const trip = await prisma.trip.findUnique({\n           where: {\n             id: 66\n                 ~~\n           },\n           include: {\n             location: true\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected String, provided Int.\n    at An (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:49:44.843Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:22.364Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:22.706Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:23.016Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:23.035Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:24.839Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:26.102Z"}
{"level":"error","message":"PUT /api/admin/locations/6ca3b45e-8a15-4a76-a2ae-2dd8388aeaa2 - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:27.287Z"}
{"level":"error","message":"DELETE /api/admin/locations/36091974-8003-4ac3-8eee-2bdbb2a2b3c5 - \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:27.880Z"}
{"level":"error","message":"POST /api/admin/users - \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:31.406Z"}
{"level":"error","message":"GET /api/admin/users/6ad50245-1ff0-4367-954e-feeddcae516d - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:57:33.844Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:58:56.784Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:58:57.085Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:58:57.366Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:58:57.381Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:58:58.282Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:58:59.400Z"}
{"level":"error","message":"PUT /api/admin/locations/870cc926-5196-4910-9b6c-6bbda35b5904 - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:59:00.503Z"}
{"level":"error","message":"DELETE /api/admin/locations/e1947649-b5ee-4fce-8f9e-5ab9af21e372 - \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:59:01.051Z"}
{"level":"error","message":"POST /api/admin/users - \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:59:03.075Z"}
{"level":"error","message":"GET /api/admin/users/85ceda61-d26d-4889-ad0b-763aa58fe97e - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:59:05.248Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T06:59:07.468Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:15.995Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:17.137Z"}
{"level":"error","message":"PUT /api/admin/locations/cc52daf7-4034-4b60-b749-9f7ba50675e1 - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:18.237Z"}
{"level":"error","message":"DELETE /api/admin/locations/c9b8ec78-93ac-4f78-8ba4-4756609b3c12 - \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:18.789Z"}
{"level":"error","message":"POST /api/reviews - \nInvalid `prisma.review.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/reviewController.js:20:40\n\n  17   imageUrls = await Promise.all(req.files.map(file => uploadImage(file)));\n  18 }\n  19 \n→ 20 const review = await prisma.review.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.review.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/reviewController.js:20:40\n\n  17   imageUrls = await Promise.all(req.files.map(file => uploadImage(file)));\n  18 }\n  19 \n→ 20 const review = await prisma.review.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:20.638Z"}
{"level":"error","message":"DELETE /api/reviews/a3be62bd-f587-4a39-899e-f5888fb2fa99 - \nInvalid `prisma.review.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/reviewController.js:106:40\n\n  103 }\n  104 \n  105 const { id } = req.params;\n→ 106 const review = await prisma.review.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.review.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/reviewController.js:106:40\n\n  103 }\n  104 \n  105 const { id } = req.params;\n→ 106 const review = await prisma.review.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:21.735Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:23.271Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:24.333Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:24.629Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:24.923Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:24.940Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:39.712Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:41.031Z"}
{"level":"error","message":"PUT /api/admin/locations/ea27b3e9-702b-4efe-9f7e-64d838ff36c0 - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:42.263Z"}
{"level":"error","message":"DELETE /api/admin/locations/7cf272ce-3075-4412-868b-1bf3e86f0e4b - \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:42.890Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:44.949Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:46.370Z"}
{"level":"error","message":"PUT /api/admin/locations/6d1dd10e-b57c-4d66-8f60-8caebefd8720 - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:47.500Z"}
{"level":"error","message":"DELETE /api/admin/locations/563f01ea-6692-43e5-af3d-2ae8d82d8fdc - \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:48.063Z"}
{"level":"error","message":"POST /api/reviews - \nInvalid `prisma.review.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/reviewController.js:20:40\n\n  17   imageUrls = await Promise.all(req.files.map(file => uploadImage(file)));\n  18 }\n  19 \n→ 20 const review = await prisma.review.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.review.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/reviewController.js:20:40\n\n  17   imageUrls = await Promise.all(req.files.map(file => uploadImage(file)));\n  18 }\n  19 \n→ 20 const review = await prisma.review.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:49.976Z"}
{"level":"error","message":"DELETE /api/reviews/ac7413b4-2991-4228-8078-6df4f96f5ef2 - \nInvalid `prisma.review.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/reviewController.js:106:40\n\n  103 }\n  104 \n  105 const { id } = req.params;\n→ 106 const review = await prisma.review.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.review.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/reviewController.js:106:40\n\n  103 }\n  104 \n  105 const { id } = req.params;\n→ 106 const review = await prisma.review.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:51.070Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:52.657Z"}
{"level":"error","message":"GET /api/trips - \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:8:37\n\n  5 \n  6 export const getTrips = async (req, res, next) => {\n  7   try {\n→ 8     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:8:37\n\n  5 \n  6 export const getTrips = async (req, res, next) => {\n  7   try {\n→ 8     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:54.548Z"}
{"level":"error","message":"GET /api/trips/adf44843-c8bc-44f3-803f-202916093797 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:23:36\n\n  20 export const getTrip = async (req, res, next) => {\n  21   try {\n  22     const { id } = req.params;\n→ 23     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:23:36\n\n  20 export const getTrip = async (req, res, next) => {\n  21   try {\n  22     const { id } = req.params;\n→ 23     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:54.596Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:55.170Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:55.474Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:55.865Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:55.930Z"}
{"level":"error","message":"POST /api/admin/users - \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:00:59.020Z"}
{"level":"error","message":"GET /api/admin/users/8e28bc4e-8ab5-48a6-a4e0-c5a3b17ff871 - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:01.560Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:20.368Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:21.531Z"}
{"level":"error","message":"PUT /api/admin/locations/866305e3-7c1e-496f-947a-1779681e057c - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:22.660Z"}
{"level":"error","message":"DELETE /api/admin/locations/1215baba-d0c7-4c8b-98bb-4c68c704e543 - \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:23.224Z"}
{"level":"error","message":"POST /api/admin/users - \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:25.563Z"}
{"level":"error","message":"GET /api/admin/users/6105b0ad-a1dc-470d-a8b9-f19bcf661fda - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:27.784Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:30.524Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:31.594Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:31.887Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:32.178Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:32.193Z"}
{"level":"error","message":"GET /api/trips - \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:32.934Z"}
{"level":"error","message":"GET /api/trips/92d2ffaf-f01a-435b-a379-60d1914e4d38 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:01:32.951Z"}
{"level":"error","message":"POST /api/admin/users - \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:15.951Z"}
{"level":"error","message":"GET /api/admin/users/16862f87-823e-417f-8299-a1d6237d9ffa - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:18.209Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:20.478Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:21.618Z"}
{"level":"error","message":"PUT /api/admin/locations/3260c29b-978b-4b1a-bd28-e4b0e6154a1f - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:22.716Z"}
{"level":"error","message":"DELETE /api/admin/locations/4f212b48-8b08-428f-85b0-214108625275 - \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:89:33\n\n  86   return res.status(403).json({ error: 'Unauthorized' });\n  87 }\n  88 const { id } = req.params;\n→ 89 await prisma.location.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:23.270Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:24.905Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:26.623Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:26.911Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:27.205Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:27.220Z"}
{"level":"error","message":"GET /api/trips - \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:28.019Z"}
{"level":"error","message":"GET /api/trips/072eeed4-6962-40e9-a87b-f5097680c1a7 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:28.068Z"}
{"level":"error","message":"POST /api/admin/users - \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:40.722Z"}
{"level":"error","message":"GET /api/admin/users/0d358459-819c-46f7-aac6-1f43ced67391 - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:43.010Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:45.409Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:47.525Z"}
{"level":"error","message":"PUT /api/admin/locations/2a819f08-a9e0-4082-b50e-4df1d5f07475 - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:48.817Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:51.111Z"}
{"level":"error","message":"GET /api/trips - \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:52.666Z"}
{"level":"error","message":"GET /api/trips/782ef3d7-fae4-4319-a202-19fa309ac1db - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:52.690Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:52.884Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:53.210Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:53.497Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:02:53.512Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:16.311Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:17.476Z"}
{"level":"error","message":"PUT /api/admin/locations/1e1534e8-2326-4c86-af46-e80580f99958 - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:18.769Z"}
{"level":"error","message":"POST /api/admin/users - \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:21.278Z"}
{"level":"error","message":"GET /api/admin/users/e0518449-5cc7-4b5c-8f63-9e2b023b5741 - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:23.986Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:26.157Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:27.204Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:27.537Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:27.829Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:27.850Z"}
{"level":"error","message":"GET /api/trips - \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:28.580Z"}
{"level":"error","message":"GET /api/trips/022cd08a-e05a-4202-a1c3-66a8781b8f02 - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:28.605Z"}
{"level":"error","message":"POST /api/admin/users - \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:46:36\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { email, name, password, role } = req.body;\n→ 46 const user = await prisma.user.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:54.875Z"}
{"level":"error","message":"GET /api/admin/users/ef593080-fadd-43b1-828d-7bef0083fb48 - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/userController.js:14:36\n\n  11 if (req.user.id !== id && !isAdminOrSuperAdmin(req.user.role)) {\n  12   return res.status(403).json({ error: 'Unauthorized' });\n  13 }\n→ 14 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:57.160Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:8:45\n\n  5 \n  6 export const getLocations = async (req, res, next) => {\n  7   try {\n→ 8     const locations = await prisma.location.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:04:59.089Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:46:44\n\n  43   return res.status(403).json({ error: 'Unauthorized' });\n  44 }\n  45 const { name, country, description, lat, long } = req.body;\n→ 46 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:00.220Z"}
{"level":"error","message":"PUT /api/admin/locations/ad37ea47-f92c-4c75-9925-b04001641a0c - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:01.322Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:04.377Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:05.507Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:05.821Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:06.116Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:06.145Z"}
{"level":"error","message":"GET /api/trips - \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:10:37\n\n   7 \n   8 export const getTrips = async (req, res, next) => {\n   9   try {\n→ 10     const trips = await prisma.trip.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:07.026Z"}
{"level":"error","message":"GET /api/trips/6ffeda7a-b590-4e57-bca0-ffcfa42a5ffa - \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.trip.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/tripController.js:25:36\n\n  22 export const getTrip = async (req, res, next) => {\n  23   try {\n  24     const { id } = req.params;\n→ 25     const trip = await prisma.trip.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:05:07.068Z"}
{"level":"error","message":"POST /api/auth/register - secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at Object.<anonymous>.module.exports [as sign] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/jsonwebtoken/sign.js:111:20)\n    at sign (/Users/realwat/Documents/Projects/TravelAppAPI/src/utils/jwt.js:4:14)\n    at _callee$ (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:33:32)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)","timestamp":"2025-05-07T07:17:19.552Z"}
{"level":"error","message":"POST /api/auth/register - secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at Object.<anonymous>.module.exports [as sign] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/jsonwebtoken/sign.js:111:20)\n    at sign (/Users/realwat/Documents/Projects/TravelAppAPI/src/utils/jwt.js:4:14)\n    at _callee$ (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:33:32)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)","timestamp":"2025-05-07T07:17:28.622Z"}
{"level":"error","message":"POST /api/auth/login - secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at Object.<anonymous>.module.exports [as sign] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/jsonwebtoken/sign.js:111:20)\n    at sign (/Users/realwat/Documents/Projects/TravelAppAPI/src/utils/jwt.js:4:14)\n    at _callee2$ (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:67:32)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)","timestamp":"2025-05-07T07:17:30.834Z"}
{"level":"error","message":"POST /api/auth/register - secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at Object.<anonymous>.module.exports [as sign] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/jsonwebtoken/sign.js:111:20)\n    at sign (/Users/realwat/Documents/Projects/TravelAppAPI/src/utils/jwt.js:4:14)\n    at _callee$ (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:33:32)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)","timestamp":"2025-05-07T07:17:33.008Z"}
{"level":"error","message":"POST /api/auth/login - secretOrPrivateKey must have a value","stack":"Error: secretOrPrivateKey must have a value\n    at Object.<anonymous>.module.exports [as sign] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/jsonwebtoken/sign.js:111:20)\n    at sign (/Users/realwat/Documents/Projects/TravelAppAPI/src/utils/jwt.js:4:14)\n    at _callee2$ (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:67:32)\n    at call (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator.s (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at Generator._invoke [as next] (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)\n    at asyncGeneratorStep (/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:2:1)","timestamp":"2025-05-07T07:17:34.371Z"}
{"level":"error","message":"PUT /api/admin/locations/87039ee3-b809-4f80-a48e-bf435f007ad0 - \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.location.update()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:73:44\n\n  70 }\n  71 const { id } = req.params;\n  72 const { name, country, description } = req.body;\n→ 73 const location = await prisma.location.update(\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7459)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-07T07:18:12.361Z"}
