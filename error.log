{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation:\n\n\nCan't reach database server at `host.docker.internal:5432`\n\nPlease make sure your database server is running at `host.docker.internal:5432`.","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation:\n\n\nCan't reach database server at `host.docker.internal:5432`\n\nPlease make sure your database server is running at `host.docker.internal:5432`.\n    at zn.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/app/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/app/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async getPlaces (file:///app/src/controllers/placeController.js:10:20)","timestamp":"2025-05-02T17:13:35.160Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation:\n\n\nCan't reach database server at `travel_app_db:5432`\n\nPlease make sure your database server is running at `travel_app_db:5432`.","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation:\n\n\nCan't reach database server at `travel_app_db:5432`\n\nPlease make sure your database server is running at `travel_app_db:5432`.\n    at zn.handleRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/app/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/app/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/app/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async getLocations (file:///app/src/controllers/locationController.js:7:23)","timestamp":"2025-05-02T17:33:43.198Z"}
{"level":"error","message":"GET /api/locations - \nInvalid `prisma.location.findMany()` invocation:\n\n\nCan't reach database server at `travel_app_db:5432`\n\nPlease make sure your database server is running at `travel_app_db:5432`.","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.findMany()` invocation:\n\n\nCan't reach database server at `travel_app_db:5432`\n\nPlease make sure your database server is running at `travel_app_db:5432`.\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async getLocations (file:///Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:7:23)","timestamp":"2025-05-04T01:10:36.568Z"}
{"level":"error","message":"Authentication error: jwt malformed","name":"JsonWebTokenError","stack":"JsonWebTokenError: jwt malformed\n    at Object.<anonymous>.module.exports [as verify] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/jsonwebtoken/verify.js:70:17)\n    at verify (/Users/realwat/Documents/Projects/TravelAppAPI/src/middleware/auth.js:11:25)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:328:13)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:328:13)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:175:3)\n    at router (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:328:13)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:346:12)\n    at next (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express/lib/router/index.js:280:10)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-rate-limit/dist/index.cjs:822:7\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/realwat/Documents/Projects/TravelAppAPI/node_modules/express-rate-limit/dist/index.cjs:704:5","timestamp":"2025-05-04T01:41:05.623Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:49.244Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:49.262Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:49.284Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:49.311Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:53.435Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:53.450Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:53.471Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T01:59:53.503Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:01.291Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:01.311Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:01.336Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:01.373Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:08.160Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:08.183Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:08.215Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:08.253Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:17.796Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:17.817Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:17.847Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:00:17.882Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:12.496Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:12.528Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:12.560Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:12.594Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:30.901Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:30.919Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:30.954Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:01:30.994Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:02:59.428Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:02:59.446Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:02:59.470Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:02:59.496Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:02.062Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:02.078Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:02.101Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:02.124Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:29.187Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:29.213Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:29.252Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:29.291Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:39.361Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:39.374Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:39.401Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:39.432Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:52.793Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:52.816Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:52.850Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:03:52.886Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:04:44.654Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:04:44.677Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:04:44.708Z"}
{"level":"error","message":"POST /api/admin/locations - \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.location.create()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/locationController.js:57:44\n\n  54 \n  55 const { name, country, description, lat, long } = req.body;\n  56 \n→ 57 const location = await prisma.location.create(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:04:44.741Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.631Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.647Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.662Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.680Z"}
{"level":"error","message":"DELETE /api/places/f2da43db-0c52-4c6b-9b6a-b703410110e2 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:07:37.725Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.497Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.513Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.529Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.546Z"}
{"level":"error","message":"DELETE /api/places/6ee15dd1-4135-4834-b472-c53b571a3de3 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:21.608Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:54.961Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:54.995Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:55.008Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:55.027Z"}
{"level":"error","message":"DELETE /api/places/ee4ee659-4992-47f7-8a7a-1d5bea455c91 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:08:55.068Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:01.903Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:02.706Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:03.560Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:04.370Z"}
{"level":"error","message":"DELETE /api/admin/places/ceb74d8f-f73b-44ff-b687-ff9fc0f98295 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:08.385Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:17.431Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:18.274Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:19.098Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:19.924Z"}
{"level":"error","message":"DELETE /api/admin/places/38bded6f-113c-4e6a-a4ee-162cc217550e - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:23.990Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:29.930Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:30.775Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:31.580Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:32.407Z"}
{"level":"error","message":"DELETE /api/admin/places/302177a7-0896-49c2-86a7-dac8095cb628 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:10:36.556Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:43.479Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:44.305Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:45.108Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:45.893Z"}
{"level":"error","message":"DELETE /api/places/2cc2dda8-c3d3-4883-b92a-b2b9cfa8eec4 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:49.873Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:57.193Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:58.022Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:58.842Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:11:59.671Z"}
{"level":"error","message":"DELETE /api/places/0c1ce016-e1a3-4cf5-b518-6fba8c04143a - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:12:03.689Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:00.672Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:01.477Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:02.323Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:03.139Z"}
{"level":"error","message":"DELETE /api/places/c1478fdc-2372-4ab1-a794-f9afe2e13e18 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:13:07.135Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:32.958Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:33.822Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:34.628Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:35.454Z"}
{"level":"error","message":"DELETE /api/admin/places/b6f224c1-4e37-4e48-98bc-5c2649846b17 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:39.427Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:48.119Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:48.949Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:49.753Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:50.565Z"}
{"level":"error","message":"DELETE /api/admin/places/3e730204-1e0e-49b9-b0cd-28aa23009a9e - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:14:54.589Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:42.954Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:43.747Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:44.550Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:45.378Z"}
{"level":"error","message":"DELETE /api/admin/places/6b4d0872-21ea-45ff-b167-6102a6a203a5 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:16:49.407Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:00.550Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:01.391Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:02.201Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:02.994Z"}
{"level":"error","message":"DELETE /api/admin/places/886b05f6-e035-4ae4-a1a0-475e02fbeedb - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:06.913Z"}
{"level":"error","message":"POST /api/auth/register - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:17:44\n\n  14 }\n  15 \n  16 const { email, password, name } = req.body;\n→ 17 const existingUser = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:14.162Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:14.971Z"}
{"level":"error","message":"POST /api/auth/login - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/authController.js:57:36\n\n  54 }\n  55 \n  56 const { email, password } = req.body;\n→ 57 const user = await prisma.user.findUnique(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:15.768Z"}
{"level":"error","message":"GET /api/places - \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.findMany()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:10:39\n\n   7 export const getPlaces = async (req, res, next) => {\n   8   try {\n   9     const { locationId, category, minRating } = req.query;\n→ 10     const places = await prisma.place.findMany(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:16.568Z"}
{"level":"error","message":"DELETE /api/admin/places/61b0b0ee-1dc8-4bfb-907f-838449081049 - \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already","stack":"PrismaClientInitializationError: \nInvalid `prisma.place.delete()` invocation in\n/Users/realwat/Documents/Projects/TravelAppAPI/src/controllers/placeController.js:184:30\n\n  181 }\n  182 \n  183 const { id } = req.params;\n→ 184 await prisma.place.delete(\nToo many database connections opened: FATAL: sorry, too many clients already\n    at zn.handleRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:7759)\n    at zn.handleAndLogRequestError (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at zn.request (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at l (/Users/realwat/Documents/Projects/TravelAppAPI/node_modules/@prisma/client/runtime/library.js:130:9778)","timestamp":"2025-05-04T02:18:20.826Z"}
